version: '3.8'

services:
  trafficserver:
    build: ./ats
    container_name: trafficserver
    ports:
      - "9888:8080"  # Порт для входящего трафика
      - "8081:8081"  # Порт для администрирования (если нужно)
    networks:
      - dmz
      - private
  openvpn-as:
    image: openvpn/openvpn-as
    container_name: openvpn-as
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - MKNOD
    ports:
      - 943:943
      - 443:443
      - 1194:1194/udp
    volumes:
      - ./openvpn:/openvpn
    restart: unless-stopped
    networks:
      - dmz
      - private
  node-app:
    build: ./node-app
    container_name: node-app
    ports:
      - "3000:3000"  # Порт Node.js приложения (для отладки)
    environment:
      - NODE_ENV=production
    networks:
      - private
  minio:
    image: minio/minio:RELEASE.2024-01-28T22-35-53Z # Конкретная версия
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: strongpassword123!
      MINIO_USERS: "user1:password1,user2:password2"
      MINIO_POLICIES: "user1=readwrite,user2=downloadonly"
    volumes:
      - minio_data:/data  # Хранение данных
    ports:
      - "9000:9000"  # API (S3)
      - "9001:9001"  # Веб-консоль
    networks:
      - dmz
    restart: unless-stopped
  my-service:
    build: ./needrestart
    container_name: my-container
    restart: unless-stopped
    command: >
      sh -c "apt-get update && 
             apt-get install -y needrestart && 
             needrestart -b -r a && 
             nginx -g 'daemon off;'"
    volumes:
      - ./config:/etc/nginx  # Пример монтирования конфигов
  webserver:
    image: php:8.2-apache
    container_name: apache-php
    ports:
      - "18080:80"
    volumes:
      - ./src:/var/www/html
    #  - ./apache-config:/etc/apache2/sites-available
    environment:
      APACHE_DOCUMENT_ROOT: /var/www/html
    networks:
      - dmz
      - private
    restart: unless-stopped

networks:
  dmz:
    driver: bridge
  private:
    driver: bridge
    internal: true

volumes:
  minio_data:
